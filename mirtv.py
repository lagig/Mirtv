import os
from datetime import datetime, timedelta
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from apscheduler.schedulers.asyncio import AsyncIOScheduler
import openpyxl

API_TOKEN = "8052107359:AAE7F0Dui6lWw_ejUvx0PR1GaJBzvu9b-t0"  # –≤—Å—Ç–∞–≤ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω
ADMIN_ID = 1418044149              # –≤—Å—Ç–∞–≤ —Å–≤—ñ–π Telegram ID

bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# Excel-—Ñ–∞–π–ª
FILE_NAME = "zayavky.xlsx"

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Excel –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
def init_excel():
    if not os.path.exists(FILE_NAME):
        wb = openpyxl.Workbook()
        ws = wb.active
        ws.title = "–ó–∞—è–≤–∫–∏"
        ws.append(["–î–∞—Ç–∞", "–ü–Ü–ë", "–ê–¥—Ä–µ—Å–∞", "–¢–µ–ª–µ—Ñ–æ–Ω", "–ü—Ä–æ–±–ª–µ–º–∞"])
        wb.save(FILE_NAME)

init_excel()

# –°—Ç–∞–Ω –º–∞—à–∏–Ω–∏ –¥–ª—è –∑–∞—è–≤–∫–∏
class Form(StatesGroup):
    fio = State()
    address = State()
    phone = State()
    problem = State()

# –ú–µ–Ω—é
main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add("üìù –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É")

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer("–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –¢–†–ö ¬´–ú–∏—Ä –¢–í¬ª –ü–æ–∫—Ä–æ–≤", reply_markup=main_menu)

# –ü–æ—á–∞—Ç–æ–∫ –∑–∞—è–≤–∫–∏
@dp.message_handler(lambda message: message.text == "üìù –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É")
async def request_start(message: types.Message):
    await Form.fio.set()
    await message.answer("–í–∫–∞–∂—ñ—Ç—å –ü–Ü–ë:")

@dp.message_handler(state=Form.fio)
async def process_fio(message: types.Message, state: FSMContext):
    await state.update_data(fio=message.text)
    await Form.next()
    await message.answer("–í–∫–∞–∂—ñ—Ç—å –∞–¥—Ä–µ—Å—É –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è:")

@dp.message_handler(state=Form.address)
async def process_address(message: types.Message, state: FSMContext):
    await state.update_data(address=message.text)
    await Form.next()
    await message.answer("–í–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:")

@dp.message_handler(state=Form.phone)
async def process_phone(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await Form.next()
    await message.answer("–û–ø–∏—à—ñ—Ç—å –ø—Ä–æ–±–ª–µ–º—É:")

@dp.message_handler(state=Form.problem)
async def process_problem(message: types.Message, state: FSMContext):
    user_data = await state.get_data()
    fio = user_data["fio"]
    address = user_data["address"]
    phone = user_data["phone"]
    problem = message.text
    now = datetime.now().strftime("%Y-%m-%d %H:%M")

    # –ó–±–µ—Ä–µ–≥—Ç–∏ –≤ Excel
    wb = openpyxl.load_workbook(FILE_NAME)
    ws = wb.active
    ws.append([now, fio, address, phone, problem])
    wb.save(FILE_NAME)

    await message.answer(
        "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–π–Ω—è—Ç–∞!\n\n"
        "–Ø–∫—â–æ –ø—Ä–æ–±–ª–µ–º—É –Ω–µ –≤–∏—Ä—ñ—à–µ–Ω–æ ‚Äî —Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ üìû +38 (063) 063-063-6\n"
        "‚è∞ –ü–Ω‚Äì–ü—Ç –∑ 10:00 –¥–æ 15:00"
    )
    await state.finish()

# –ü–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫: –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Ñ–∞–π–ª –∞–¥–º—ñ–Ω—É –∫–æ–∂–Ω—ñ 2 –¥–Ω—ñ
scheduler = AsyncIOScheduler()

def send_excel():
    async def _send():
        if os.path.exists(FILE_NAME):
            today = datetime.now().date()
            start_date = today - timedelta(days=2)
            caption = f"üìä –ó–∞—è–≤–∫–∏ –∑ {start_date} –ø–æ {today}"
            await bot.send_document(ADMIN_ID, open(FILE_NAME, "rb"), caption=caption)
    dp.loop.create_task(_send())

scheduler.add_job(send_excel, "interval", days=2)
scheduler.start()

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)